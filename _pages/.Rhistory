# for (var in outcomes_var) {
#
#   formula_outcomes <- formula(paste(var, controls_num_woman))
#
#   # Fit fixed-effects model
#   model <- feols( formula_outcomes, fixef="village_name_cases" , cluster="caseid", data = woman_update)
#   # Store results
#   reg_results_woman[[var]] <- model
# }
for (var in outcomes_var) {
formula_outcomes <- formula(paste(var, controls_num_woman_1))
# Fit fixed-effects model
model <- feols( formula_outcomes, fixef="village_name_cases" , cluster="caseid", data = woman_update)
# Store results
reg_results_woman[[var]] <- model
}
######## #### #### #### #### #### ####  woman_update  #### #### #### #### #### #### #### #### #### ####
predict_woman <- function(model, data) {
mu_woman[[deparse(substitute(model))]] <<- 0
a1_woman[[deparse(substitute(model))]] <<- coefficients(model)["q_1_diff"]
a2_woman[[deparse(substitute(model))]] <<- coefficients(model)["q_2_half"]
for (term in interaction_terms) {
mu_woman[[deparse(substitute(model))]] <<- mu_woman[[deparse(substitute(model))]] + coefficients(model)[term] * data[[term]]
# a1_woman[[deparse(substitute(model))]] <<- a1_woman[[deparse(substitute(model))]] + coefficients(model)[paste0("q_1_diff", ":", term)] * data[[term]]
# a2_woman[[deparse(substitute(model))]] <<- a2_woman[[deparse(substitute(model))]] + coefficients(model)[paste0(term, ":", "q_2_half")] * data[[term]]
}
}
## women's index
predict_woman(reg_results_woman$women_index_jaya_final, woman_update)
# adding variables to the dataset
woman_update[,mu_index_w:=mu_woman[1]]
woman_update[,a1_index_w:=a1_woman[1]]
woman_update[,a2_index_w:=a2_woman[1]]
# mu_woman_indexw <- as.numeric(mu_woman[[1]])
# a1_woman_indexw <- as.numeric(a1_woman[[1]])
# a2_woman_indexw <- as.numeric(a2_woman[[1]])
#
# woman_update[,mu_index_w:=-mu_woman_indexw]
# woman_update[,a1_index_w:=-a1_woman_indexw]
# woman_update[,a2_index_w:=-a2_woman_indexw]
## calculating the MTE
woman_update[,mte_index_w := (mu_index_w + a1_index_w*(q_1-1/2) + a2_index_w*(q_2-1/2)) ]
## women's share
predict_woman(reg_results_woman$consum_woman_share_winsor_1, woman_update)
# adding variables to the dataset
woman_update[,mu_share_w:=mu_woman[2]]
woman_update[,a1_share_w:=a1_woman[2]]
woman_update[,a2_share_w:=a2_woman[2]]
# mu_woman_sharew <- as.numeric(mu_woman[[2]])
# a1_woman_sharew <- as.numeric(a1_woman[[2]])
# a2_woman_sharew <- as.numeric(a2_woman[[2]])
#
# woman_update[,mu_share_w:=-mu_woman_sharew]
# woman_update[,a1_share_w:=-a1_woman_sharew]
# woman_update[,a2_share_w:=-a2_woman_sharew]
## calculating the MTE
woman_update[,mte_share_w := (mu_share_w + a1_share_w*(q_1-1/2) + a2_share_w*(q_2-1/2)) ]
## ipv index
predict_woman(reg_results_woman$ipv_index_jaya_final, woman_update)
# adding variables to the dataset
woman_update[,mu_ipv:=mu_woman[3]]
woman_update[,a1_ipv:=a1_woman[3]]
woman_update[,a2_ipv:=a2_woman[3]]
# mu_woman_ipv <- as.numeric(mu_woman[[3]])
# a1_woman_ipv <- as.numeric(a1_woman[[3]])
# a2_woman_ipv <- as.numeric(a2_woman[[3]])
#
# woman_update[,mu_ipv:=-mu_woman_ipv]
# woman_update[,a1_ipv:=-a1_woman_ipv]
# woman_update[,a2_ipv:=-a2_woman_ipv]
## calculating the MTE
woman_update[,mte_ipv := (mu_ipv + a1_ipv*(q_1-1/2) + a2_ipv*(q_2-1/2)) ]
## plotting how they look
ggplot(woman_update, aes(x=mte_index_w)) + stat_ecdf()
ggplot(woman_update, aes(x=mte_share_w)) + stat_ecdf()
ggplot(woman_update, aes(x=mte_ipv)) + stat_ecdf()
######## #### #### #### #### #### ####  data_both_unaware_bs  #### #### #### #### #### #### #### #### #### ####
predict_woman_full <- function(model, data) {
mu_woman_full[[deparse(substitute(model))]] <<- 0
a1_woman_full[[deparse(substitute(model))]] <<- coefficients(model)["q_1_diff"]
a2_woman_full[[deparse(substitute(model))]] <<- coefficients(model)["q_2_half"]
for (term in interaction_terms) {
mu_woman_full[[deparse(substitute(model))]] <<- mu_woman_full[[deparse(substitute(model))]] + coefficients(model)[term] * data[[term]]
# a1_woman_full[[deparse(substitute(model))]] <<- a1_woman_full[[deparse(substitute(model))]] + coefficients(model)[paste0("q_1_diff", ":", term)] * data[[term]]
# a2_woman_full[[deparse(substitute(model))]] <<- a2_woman_full[[deparse(substitute(model))]] + coefficients(model)[paste0(term, ":", "q_2_half")] * data[[term]]
}
}
## women's index
predict_woman_full(reg_results_woman$women_index_jaya_final, data_both_unaware_bs)
# adding variables to the dataset
data_both_unaware_bs[,mu_index_w_woman:=mu_woman_full[1]]
data_both_unaware_bs[,a1_index_w_woman:=a1_woman_full[1]]
data_both_unaware_bs[,a2_index_w_woman:=a2_woman_full[1]]
# mu_woman_indexw_full <- as.numeric(mu_woman_full[[1]])
# a1_woman_indexw_full <- as.numeric(a1_woman_full[[1]])
# a2_woman_indexw_full <- as.numeric(a2_woman_full[[1]])
#
# data_both_unaware_bs[,mu_index_w_woman:=-mu_woman_indexw_full]
# data_both_unaware_bs[,a1_index_w_woman:=-a1_woman_indexw_full]
# data_both_unaware_bs[,a2_index_w_woman:=-a2_woman_indexw_full]
## calculating the MTE
data_both_unaware_bs[,mte_index_w_woman := (mu_index_w_woman + a1_index_w_woman*(q_1-1/2) + a2_index_w_woman*(q_2-1/2)) ]
## women's share
predict_woman_full(reg_results_woman$consum_woman_share_winsor_1, data_both_unaware_bs)
# adding variables to the dataset
data_both_unaware_bs[,mu_share_w_woman:=mu_woman_full[2]]
data_both_unaware_bs[,a1_share_w_woman:=a1_woman_full[2]]
data_both_unaware_bs[,a2_share_w_woman:=a2_woman_full[2]]
# mu_woman_sharew_full <- as.numeric(mu_woman_full[[2]])
# a1_woman_sharew_full <- as.numeric(a1_woman_full[[2]])
# a2_woman_sharew_full <- as.numeric(a2_woman_full[[2]])
#
# data_both_unaware_bs[,mu_share_w_woman:=-mu_woman_sharew_full]
# data_both_unaware_bs[,a1_share_w_woman:=-a1_woman_sharew_full]
# data_both_unaware_bs[,a2_share_w_woman:=-a2_woman_sharew_full]
## calculating the MTE
data_both_unaware_bs[,mte_share_w_woman :=( mu_share_w_woman + a1_share_w_woman*(q_1-1/2) + a2_share_w_woman*(q_2-1/2)) ]
## ipv index
predict_woman_full(reg_results_woman$ipv_index_jaya_final, data_both_unaware_bs)
# adding variables to the dataset
data_both_unaware_bs[,mu_ipv_woman:=mu_woman_full[3]]
data_both_unaware_bs[,a1_ipv_woman:=a1_woman_full[3]]
data_both_unaware_bs[,a2_ipv_woman:=a2_woman_full[3]]
# mu_woman_ipv_full <- as.numeric(mu_woman_full[[3]])
# a1_woman_ipv_full <- as.numeric(a1_woman_full[[3]])
# a2_woman_ipv_full <- as.numeric(a2_woman_full[[3]])
#
# data_both_unaware_bs[,mu_ipv_woman:=-mu_woman_ipv_full]
# data_both_unaware_bs[,a1_ipv_woman:=-a1_woman_ipv_full]
# data_both_unaware_bs[,a2_ipv_woman:=-a2_woman_ipv_full]
## calculating the MTE
data_both_unaware_bs[,mte_ipv_woman :=( mu_ipv_woman + a1_ipv_woman*(q_1-1/2) + a2_ipv_woman*(q_2-1/2)) ]
## plotting how they look
ggplot(woman_update, aes(x=mte_index_w)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_index_w_woman)) + geom_density()
ggplot(woman_update, aes(x=mte_share_w)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_share_w_woman)) + geom_density()
ggplot(woman_update, aes(x=mte_ipv)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_ipv_woman)) + geom_density()
### Outcome:  (neither-update) -------
#
# controls_num_neither <- "~ q_1_diff*q1.10_age_woman_baseline + q_1_diff*exp_bs_log + q_1_diff*q11.2_age_husb_baseline + q_1_diff*caste_gen +q_1_diff*woman_agri_bs + q_1_diff*q1.7_edu_woman_bs_baseline + q_1_diff*q11.3_edu_husb_bs_baseline + q_1_diff*village_centre +q_1_diff*q1.15_no_hhs_bs_baseline + q_1_diff*q4.21_no_rooms_baseline + q_1_diff*mahila_sabha_dummy_bs + q_1_diff*q6.4_shg_member_baseline +q_1_diff*q7.3_girl_marriage_bs_baseline + q_1_diff*q7.4_girl_edu_bs_baseline + q_1_diff*bargain_index_jaya_var_bs_final + q_1_diff*woman_income_dummy_bs +q_1_diff*women_index_jaya_bs_final + q_1_diff*ipv_index_jaya_bs_final + q_1_diff*consum_woman_share_bs_winsor_1 +q_2_diff*q1.10_age_woman_baseline + q_2_diff*exp_bs_log + q_2_diff*q11.2_age_husb_baseline + q_2_diff*caste_gen + q_2_diff*woman_agri_bs + q_2_diff*q1.7_edu_woman_bs_baseline + q_2_diff*q11.3_edu_husb_bs_baseline + q_2_diff*village_centre +q_2_diff*q1.15_no_hhs_bs_baseline + q_2_diff*q4.21_no_rooms_baseline  + q_2_diff*mahila_sabha_dummy_bs + q_2_diff*q6.4_shg_member_baseline + q_2_diff*q7.3_girl_marriage_bs_baseline + q_2_diff*q7.4_girl_edu_bs_baseline + q_2_diff*bargain_index_jaya_var_bs_final + q_2_diff*woman_income_dummy_bs + q_2_diff*women_index_jaya_bs_final + q_2_diff*ipv_index_jaya_bs_final  + q_2_diff*consum_woman_share_bs_winsor_1"
## 1. only kept continuous variables
## 2. then removed girl marriage
## 3. then removed those that were not strong predictors such as education and no. of rooms
## 4. then removed bargaining index
## 5. then removed exp_bs_log
## 6. restarted with the 6 covariates that predict who updates and who knew:  c("q1.10_age_woman_baseline", "q11.2_age_husb_baseline", "q1.7_edu_woman_bs_baseline", "q1.15_no_hhs_bs_baseline","q7.4_girl_edu_bs_baseline","village_centre")
## it seems that q7.4_girl_edu_bs_baseline is important in getting the trend we need
# controls_num_neither_1 <- "~ q_1_diff*q1.10_age_woman_baseline  + q_1_diff*q11.2_age_husb_baseline+ q_1_diff*q7.4_girl_edu_bs_baseline + q_2_diff*q7.4_girl_edu_bs_baseline+q_2_diff*q1.10_age_woman_baseline + q_2_diff*q11.2_age_husb_baseline "
controls_num_neither_1 <- paste0("~ q_1_diff + q_2_diff +",controls)
## To do - next remove the education and see if things flip ?
reg_results_neither <- list()
mu_neither <- list()
a1_neither <- list()
a2_neither <- list()
mu_neither_full <- list()
a1_neither_full <- list()
a2_neither_full <- list()
# for (var in outcomes_var) {
#
#   formula_outcomes <- formula(paste(var, controls_num_neither))
#
#   # Fit fixed-effects model
#   model <- feols( formula_outcomes, fixef="village_name_cases" , cluster="caseid", data = neither_update)
#   # Store results
#   reg_results_neither[[var]] <- model
# }
for (var in outcomes_var) {
formula_outcomes <- formula(paste(var, controls_num_neither_1))
# Fit fixed-effects model
model <- feols( formula_outcomes, fixef="village_name_cases" , cluster="caseid", data = neither_update)
# Store results
reg_results_neither[[var]] <- model
}
######## #### #### #### #### #### ####  neither_update  #### #### #### #### #### #### #### #### #### ####
predict_neither <- function(model, data) {
mu_neither[[deparse(substitute(model))]] <<- 0
a1_neither[[deparse(substitute(model))]] <<- coefficients(model)["q_1_diff"]
a2_neither[[deparse(substitute(model))]] <<- coefficients(model)["q_2_diff"]
for (term in interaction_terms) {
mu_neither[[deparse(substitute(model))]] <<- mu_neither[[deparse(substitute(model))]] + coefficients(model)[term] * data[[term]]
# a1_neither[[deparse(substitute(model))]] <<- a1_neither[[deparse(substitute(model))]] + coefficients(model)[paste0("q_1_diff", ":", term)] * data[[term]]
# a2_neither[[deparse(substitute(model))]] <<- a2_neither[[deparse(substitute(model))]] + coefficients(model)[paste0(term, ":", "q_2_diff")] * data[[term]]
}
}
## women's index
predict_neither(reg_results_neither$women_index_jaya_final, neither_update)
## adding variables to the dataset
neither_update[,mu_index_w:=mu_neither[1]]
neither_update[,a1_index_w:=a1_neither[1]]
neither_update[,a2_index_w:=a2_neither[1]]
## calculating the MTE
neither_update[,mte_index_w := mu_index_w + a1_index_w*(q_1-1/2) + a2_index_w*(q_2-1/2) ]
## women's share
predict_neither(reg_results_neither$consum_woman_share_winsor_1, neither_update)
## adding variables to the dataset
neither_update[,mu_share_w:=mu_neither[2]]
neither_update[,a1_share_w:=a1_neither[2]]
neither_update[,a2_share_w:=a2_neither[2]]
## calculating the MTE
neither_update[,mte_share_w := mu_share_w + a1_share_w*(q_1-1/2) + a2_share_w*(q_2-1/2) ]
## ipv index
predict_neither(reg_results_neither$ipv_index_jaya_final, neither_update)
## adding variables to the dataset
neither_update[,mu_ipv:=mu_neither[3]]
neither_update[,a1_ipv:=a1_neither[3]]
neither_update[,a2_ipv:=a2_neither[3]]
## calculating the MTE
neither_update[,mte_ipv := mu_ipv + a1_ipv*(q_1-1/2) + a2_ipv*(q_2-1/2) ]
######## #### #### #### #### #### ####  data_both_unaware_bs  #### #### #### #### #### #### #### #### #### ####
predict_neither_full <- function(model, data) {
mu_neither_full[[deparse(substitute(model))]] <<- 0
a1_neither_full[[deparse(substitute(model))]] <<- coefficients(model)["q_1_diff"]
a2_neither_full[[deparse(substitute(model))]] <<- coefficients(model)["q_2_diff"]
for (term in interaction_terms) {
mu_neither_full[[deparse(substitute(model))]] <<- mu_neither_full[[deparse(substitute(model))]] + coefficients(model)[term] * data[[term]]
# a1_neither_full[[deparse(substitute(model))]] <<- a1_neither_full[[deparse(substitute(model))]] + coefficients(model)[paste0("q_1_diff", ":", term)] * data[[term]]
# a2_neither_full[[deparse(substitute(model))]] <<- a2_neither_full[[deparse(substitute(model))]] + coefficients(model)[paste0(term, ":", "q_2_diff")] * data[[term]]
}
}
## women's index
predict_neither_full(reg_results_neither$women_index_jaya_final, data_both_unaware_bs)
## adding variables to the dataset
data_both_unaware_bs[,mu_index_w_neither:=mu_neither_full[1]]
data_both_unaware_bs[,a1_index_w_neither:=a1_neither_full[1]]
data_both_unaware_bs[,a2_index_w_neither:=a2_neither_full[1]]
## calculating the MTE
data_both_unaware_bs[,mte_index_w_neither := mu_index_w_neither + a1_index_w_neither*(q_1-1/2) + a2_index_w_neither*(q_2-1/2) ]
## difference in a's
data_both_unaware_bs[, a1_index_w_14:=a1_index_w_both-a1_index_w_neither]
data_both_unaware_bs[, a1_index_w_13:=a1_index_w_woman-a1_index_w_neither]
data_both_unaware_bs[, a1_index_w_12:=a1_index_w_man-a1_index_w_neither]
data_both_unaware_bs[, a2_index_w_14:=a2_index_w_both-a2_index_w_neither]
data_both_unaware_bs[, a2_index_w_13:=a2_index_w_woman-a2_index_w_neither]
data_both_unaware_bs[, a2_index_w_12:=a2_index_w_man-a2_index_w_neither]
data_both_unaware_bs %>% count(a1_index_w_14,a1_index_w_13,a1_index_w_12,a2_index_w_14,a2_index_w_13,a2_index_w_12)
## women's share
predict_neither_full(reg_results_neither$consum_woman_share_winsor_1, data_both_unaware_bs)
## adding variables to the dataset
data_both_unaware_bs[,mu_share_w_neither:=mu_neither_full[2]]
data_both_unaware_bs[,a1_share_w_neither:=a1_neither_full[2]]
data_both_unaware_bs[,a2_share_w_neither:=a2_neither_full[2]]
## calculating the MTE
data_both_unaware_bs[,mte_share_w_neither := mu_share_w_neither + a1_share_w_neither*(q_1-1/2) + a2_share_w_neither*(q_2-1/2) ]
## difference in a's
data_both_unaware_bs[, a1_share_w_14:=a1_share_w_both-a1_share_w_neither]
data_both_unaware_bs[, a1_share_w_13:=a1_share_w_woman-a1_share_w_neither]
data_both_unaware_bs[, a1_share_w_12:=a1_share_w_man-a1_share_w_neither]
data_both_unaware_bs[, a2_share_w_14:=a2_share_w_both-a2_share_w_neither]
data_both_unaware_bs[, a2_share_w_13:=a2_share_w_woman-a2_share_w_neither]
data_both_unaware_bs[, a2_share_w_12:=a2_share_w_man-a2_share_w_neither]
data_both_unaware_bs %>% count(a1_share_w_14,a1_share_w_13,a1_share_w_12,a2_share_w_14,a2_share_w_13,a2_share_w_12)
## ipv index
predict_neither_full(reg_results_neither$ipv_index_jaya_final, data_both_unaware_bs)
## adding variables to the dataset
data_both_unaware_bs[,mu_ipv_neither:=mu_neither_full[3]]
data_both_unaware_bs[,a1_ipv_neither:=a1_neither_full[3]]
data_both_unaware_bs[,a2_ipv_neither:=a2_neither_full[3]]
## calculating the MTE
data_both_unaware_bs[,mte_ipv_neither := mu_ipv_neither + a1_ipv_neither*(q_1-1/2) + a2_ipv_neither*(q_2-1/2) ]
## difference in a's
data_both_unaware_bs[, a1_ipv_14:=a1_ipv_both-a1_ipv_neither]
data_both_unaware_bs[, a1_ipv_13:=a1_ipv_woman-a1_ipv_neither]
data_both_unaware_bs[, a1_ipv_12:=a1_ipv_man-a1_ipv_neither]
data_both_unaware_bs[, a2_ipv_14:=a2_ipv_both-a2_ipv_neither]
data_both_unaware_bs[, a2_ipv_13:=a2_ipv_woman-a2_ipv_neither]
data_both_unaware_bs[, a2_ipv_12:=a2_ipv_man-a2_ipv_neither]
data_both_unaware_bs %>% count(a1_ipv_14,a1_ipv_13,a1_ipv_12,a2_ipv_14,a2_ipv_13,a2_ipv_12)
## plotting how they look
ggplot(neither_update, aes(x=mte_index_w)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_index_w_neither)) + geom_density()
ggplot(neither_update, aes(x=mte_share_w)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_share_w_neither)) + geom_density()
ggplot(neither_update, aes(x=mte_ipv)) + geom_density()
ggplot(data_both_unaware_bs, aes(x=mte_ipv_neither)) + geom_density()
## calculating the actual mtes' - difference from the neither
## both update
## full expression for mte
data_both_unaware_bs[,actual_mte_index_w_both := mte_index_w_both - mte_index_w_neither]
data_both_unaware_bs[,actual_mte_share_w_both := mte_share_w_both - mte_share_w_neither]
data_both_unaware_bs[,actual_mte_ipv_both := mte_ipv_both - mte_ipv_neither]
## just the difference in mu's
data_both_unaware_bs[,mu_mte_index_w_both := mu_index_w_both - mu_index_w_neither]
data_both_unaware_bs[,mu_mte_share_w_both := mu_share_w_both - mu_share_w_neither]
data_both_unaware_bs[,mu_mte_ipv_both := mu_ipv_both - mu_ipv_neither]
## just the difference in a_1's*(q_1-1/2)
data_both_unaware_bs[,q1_a1_index_w_both := (q_1-1/2)*(a1_index_w_14)]
data_both_unaware_bs[,q1_a1_share_w_both := (q_1-1/2)*(a1_share_w_14)]
data_both_unaware_bs[,q1_a1_ipv_both := (q_1-1/2)*(a1_ipv_14)]
## just the difference in a_2's*(q_2-1/2)
data_both_unaware_bs[,q2_a2_index_w_both := (q_2-1/2)*(a2_index_w_14)]
data_both_unaware_bs[,q2_a2_share_w_both := (q_2-1/2)*(a2_share_w_14)]
data_both_unaware_bs[,q2_a2_ipv_both := (q_2-1/2)*(a2_ipv_14)]
## man update
data_both_unaware_bs[,actual_mte_index_w_man := mte_index_w_man - mte_index_w_neither]
data_both_unaware_bs[,actual_mte_share_w_man := mte_share_w_man - mte_share_w_neither]
data_both_unaware_bs[,actual_mte_ipv_man := mte_ipv_man - mte_ipv_neither]
data_both_unaware_bs[,mu_mte_index_w_man := mu_index_w_man - mu_index_w_neither]
data_both_unaware_bs[,mu_mte_share_w_man := mu_share_w_man - mu_share_w_neither]
data_both_unaware_bs[,mu_mte_ipv_man := mu_ipv_man - mu_ipv_neither]
## just the difference in a_1's*(q_1-1/2)
data_both_unaware_bs[,q1_a1_index_w_man := (q_1-1/2)*(a1_index_w_12)]
data_both_unaware_bs[,q1_a1_share_w_man := (q_1-1/2)*(a1_share_w_12)]
data_both_unaware_bs[,q1_a1_ipv_man := (q_1-1/2)*(a1_ipv_12)]
## just the difference in a_2's*(q_2-1/2)
data_both_unaware_bs[,q2_a2_index_w_man := (q_2-1/2)*(a2_index_w_12)]
data_both_unaware_bs[,q2_a2_share_w_man := (q_2-1/2)*(a2_share_w_12)]
data_both_unaware_bs[,q2_a2_ipv_man := (q_2-1/2)*(a2_ipv_12)]
## woman update
data_both_unaware_bs[,actual_mte_index_w_woman := mte_index_w_woman - mte_index_w_neither]
data_both_unaware_bs[,actual_mte_share_w_woman := mte_share_w_woman - mte_share_w_neither]
data_both_unaware_bs[,actual_mte_ipv_woman := mte_ipv_woman - mte_ipv_neither]
data_both_unaware_bs[,mu_mte_index_w_woman := mu_index_w_woman - mu_index_w_neither]
data_both_unaware_bs[,mu_mte_share_w_woman := mu_share_w_woman - mu_share_w_neither]
data_both_unaware_bs[,mu_mte_ipv_woman := mu_ipv_woman - mu_ipv_neither]
## just the difference in a_1's*(q_1-1/2)
data_both_unaware_bs[,q1_a1_index_w_woman := (q_1-1/2)*(a1_index_w_13)]
data_both_unaware_bs[,q1_a1_share_w_woman := (q_1-1/2)*(a1_share_w_13)]
data_both_unaware_bs[,q1_a1_ipv_woman := (q_1-1/2)*(a1_ipv_13)]
## just the difference in a_2's*(q_2-1/2)
data_both_unaware_bs[,q2_a2_index_w_woman := (q_2-1/2)*(a2_index_w_13)]
data_both_unaware_bs[,q2_a2_share_w_woman := (q_2-1/2)*(a2_share_w_13)]
data_both_unaware_bs[,q2_a2_ipv_woman := (q_2-1/2)*(a2_ipv_13)]
## transforming the data into long format so that can plot all three MTEs together
both_mte <- data_both_unaware_bs[aware_change_both==1,c("actual_mte_index_w_both","actual_mte_share_w_both","actual_mte_ipv_both",
"mu_mte_index_w_both","mu_mte_share_w_both","mu_mte_ipv_both",
"q1_a1_index_w_both","q1_a1_share_w_both","q1_a1_ipv_both",
"q2_a2_index_w_both","q2_a2_share_w_both","q2_a2_ipv_both")]
setnames(both_mte, c("actual_mte_index_w_both","actual_mte_share_w_both","actual_mte_ipv_both",
"mu_mte_index_w_both","mu_mte_share_w_both","mu_mte_ipv_both",
"q1_a1_index_w_both","q1_a1_share_w_both","q1_a1_ipv_both",
"q2_a2_index_w_both","q2_a2_share_w_both","q2_a2_ipv_both"),
c("actual_mte_index_w","actual_mte_share_w","actual_mte_ipv",
"mu_mte_index_w","mu_mte_share_w","mu_mte_ipv",
"q1_a1_index_w","q1_a1_share_w","q1_a1_ipv",
"q2_a2_index_w","q2_a2_share_w","q2_a2_ipv"))
both_mte$who_updates <- "both update (D=4)"
man_mte <- data_both_unaware_bs[aware_change_man==1,c("actual_mte_index_w_man","actual_mte_share_w_man","actual_mte_ipv_man",
"mu_mte_index_w_man","mu_mte_share_w_man","mu_mte_ipv_man",
"q1_a1_index_w_man","q1_a1_share_w_man","q1_a1_ipv_man",
"q2_a2_index_w_man","q2_a2_share_w_man","q2_a2_ipv_man")]
setnames(man_mte, c("actual_mte_index_w_man","actual_mte_share_w_man","actual_mte_ipv_man",
"mu_mte_index_w_man","mu_mte_share_w_man","mu_mte_ipv_man",
"q1_a1_index_w_man","q1_a1_share_w_man","q1_a1_ipv_man",
"q2_a2_index_w_man","q2_a2_share_w_man","q2_a2_ipv_man"),
c("actual_mte_index_w","actual_mte_share_w","actual_mte_ipv",
"mu_mte_index_w","mu_mte_share_w","mu_mte_ipv",
"q1_a1_index_w","q1_a1_share_w","q1_a1_ipv",
"q2_a2_index_w","q2_a2_share_w","q2_a2_ipv"))
man_mte$who_updates <- "man updates (D=2)"
woman_mte <- data_both_unaware_bs[aware_change_woman==1,c("actual_mte_index_w_woman","actual_mte_share_w_woman","actual_mte_ipv_woman",
"mu_mte_index_w_woman","mu_mte_share_w_woman","mu_mte_ipv_woman",
"q1_a1_index_w_woman","q1_a1_share_w_woman","q1_a1_ipv_woman",
"q2_a2_index_w_woman","q2_a2_share_w_woman","q2_a2_ipv_woman")]
setnames(woman_mte, c("actual_mte_index_w_woman","actual_mte_share_w_woman","actual_mte_ipv_woman",
"mu_mte_index_w_woman","mu_mte_share_w_woman","mu_mte_ipv_woman",
"q1_a1_index_w_woman","q1_a1_share_w_woman","q1_a1_ipv_woman",
"q2_a2_index_w_woman","q2_a2_share_w_woman","q2_a2_ipv_woman"),
c("actual_mte_index_w","actual_mte_share_w","actual_mte_ipv",
"mu_mte_index_w","mu_mte_share_w","mu_mte_ipv" ,
"q1_a1_index_w","q1_a1_share_w","q1_a1_ipv",
"q2_a2_index_w","q2_a2_share_w","q2_a2_ipv"))
woman_mte$who_updates <- "woman updates (D=3)"
mte <- rbind(both_mte,man_mte, woman_mte)
mte_long <- mte %>%
pivot_longer(
cols = starts_with("actual_mte_") | starts_with("mu_mte_")| starts_with("q1_a1_")|starts_with("q2_a2_"),
names_to = c("type", ".value"),   # 'type' will capture 'actual' or 'mu', '.value' will capture the variable names
names_pattern = "(actual_mte|mu_mte|q1_a1|q2_a2)_(.*)"  # Pattern to split the variable names
)
mte_long %>%  count(type)
setDT(mte_long)[type=="mu_mte", type:="delta(mu(x))"]
setDT(mte_long)[type=="actual_mte", type:="mte"]
setDT(mte_long)[type=="q1_a1", type:="(q1-1/2)*delta(a1)"]
setDT(mte_long)[type=="q2_a2", type:="(q2-1/2)*delta(a2)"]
ggplot(setDT(mte_long), aes(x=index_w,color=who_updates)) + geom_density() + facet_wrap(~type) + labs(title="Density for Women's Consump. Index")
ggplot(setDT(mte_long), aes(x=index_w,color=who_updates)) + stat_ecdf() + facet_wrap(~type) + labs(title="ECDF for Women's Consump. Index")
ggplot(setDT(mte_long), aes(x=share_w,color=who_updates)) + geom_density() + facet_wrap(~type) + labs(title="Density for Women's Share of Pvt Consumption")
ggplot(setDT(mte_long), aes(x=share_w,color=who_updates)) + stat_ecdf() + facet_wrap(~type) + labs(title="ECDF for Women's Share of Pvt Consumption")
data %>%  count(awareness_couple_bs_factor) %>%  mutate(perc=n*100/sum(n))
ownership_data_edited <- read_excel("/Users/akankshavardani/Desktop/Research/Projects/Land titling/House for Two/surveys/Survey Oct-Dec 2023/daily_data/couple_female_ownership_data_sep7_edit.xlsx")
setnames(ownership_data_edited,"n","no_hh")
data_ownership <- setDT(merge(ownership_data_edited,data, by=c("village_name_cases")))
data_ownership[village_name_cases=="chas",no_hh:=749] ## from devidas - arsin is incorrect becasue from screenshots
data_ownership[village_name_cases=="sakurdi",no_hh:=695] ## gave Arsin the edited file so she only typed out 30 names !
data_ownership[village_name_cases=="kalus"|village_name_cases=="shiroli"|village_name_cases=="koye"|village_name_cases=="bhamboli"|village_name_cases=="pimpalgaon t khed",perc_couple_edit:=perc_couple+20]
data_ownership[village_name_cases=="askhed khurd",perc_couple_edit:=perc_couple]
data_ownership[village_name_cases=="sakurdi",perc_couple_edit:=89]
data_ownership[village_name_cases=="shelu",perc_couple_edit:=91] ##devidas
data_ownership[village_name_cases=="shive",perc_couple_edit:=87.9] ##devidas
data_ownership[village_name_cases=="sakurdi",perc_female_edit:=93.63]
data_ownership[village_name_cases=="askhed khurd",perc_female_edit:=89.64] ##devidas
data_ownership[village_name_cases=="tekwadi",perc_female_edit:=99.12]
data_ownership[village_name_cases=="shive",perc_female_edit:=90.8754]
data_ownership[village_name_cases=="shirgaon",perc_couple_edit:=48.12091]
data_ownership[village_name_cases=="tokawade",perc_couple_edit:=80]
data_ownership[village_name_cases=="shirgaon",perc_female_edit:=56]
data_ownership[village_name_cases=="tokawade",perc_female_edit:=87]
setDT(data_ownership)[, no_obs :=.N, by=c("village_name_cases")]
setDT(data_ownership)[, no_obs_treat :=.N, by=c("village_name_cases","treat_assign")]
no_obs <- data_ownership %>%
distinct_at(c("village_name_cases","no_hh","no_obs","no_obs_treat","treat_assign")) %>%
mutate(no_obs_treat=ifelse(village_name_cases=="kadhadhe",0,no_obs_treat)) %>%
mutate(treat_assign=ifelse(village_name_cases=="kadhadhe",1,treat_assign)) %>%
filter(treat_assign==1) %>%
mutate(perc_survey=no_obs*100/no_hh) %>%
mutate(perc_treated=no_obs_treat*100/no_hh) %>%
mutate(perc_sample:=no_obs*100/1558) %>%
select(village_name_cases,perc_survey,perc_treated,perc_sample)
## merging back with the data_ownership data
data_ownership <- setDT(merge(no_obs,data_ownership, by=c("village_name_cases")))
y <- data_ownership %>% count(village_name_cases,perc_survey,perc_treated,perc_sample,perc_female_edit,perc_couple_edit,perc_couple, no_hh)
y
library(readxl)
pune_dist_N9_Data_2023_24 <- read_excel("~/Downloads/pune dist N9 Data 2023_24.xlsx")
View(pune_dist_N9_Data_2023_24)
names(pune_dist_N9_Data_2023_24)
pune_n9_23_24 <- setDT(pune_dist_N9_Data_2023_24)[,c(1:8)]
View(pune_n9_23_24)
pune_n9_23_24<- unique(pune_n9_23_24)
pune_n9_23_24 <- setDT(pune_dist_N9_Data_2023_24)[,c(1:6,8)]
pune_n9_23_24<- unique(pune_n9_23_24)
pune_n9_23_24 <- setDT(pune_dist_N9_Data_2023_24)[,c(1:6)]
pune_n9_23_24<- unique(pune_n9_23_24)
View(pune_n9_23_24)
pune_n9_23_24 %>%  count(TALNAME)
pune_dist_N9_Data_2023_24_1 <- read_excel("~/Downloads/pune dist N9 Data 2023_24.xlsx",
sheet = "2023 - 2024 PART 1 ")
pune_dist_N9_Data_2023_24_2 <- read_excel("~/Downloads/pune dist N9 Data 2023_24.xlsx",
sheet = "2023 - 2024 PART 2 ")
pune_dist_N9_Data_2023_24_2 <- read_excel("~/Downloads/pune dist N9 Data 2023_24.xlsx",
sheet = "2023 - 2024 PART 2")
View(pune_dist_N9_Data_2023_24_1)
View(pune_dist_N9_Data_2023_24_2)
pune_dist_N9_Data_2023_24 <- rbind(pune_dist_N9_Data_2023_24_1,pune_dist_N9_Data_2023_24_2)
?rbind
View(pune_dist_N9_Data_2023_24_2)
names(pune_dist_N9_Data_2023_24_2)
pune_dist_N9_Data_2023_24_2$`...29`<-NULL
pune_dist_N9_Data_2023_24 <- rbind(pune_dist_N9_Data_2023_24_1,pune_dist_N9_Data_2023_24_2)
pune_n9_23_24 <- setDT(pune_dist_N9_Data_2023_24)[,c(1:6)]
pune_n9_23_24<- unique(pune_n9_23_24)
names(pune_n9_23_24)
rm(pune_dist_N9_Data_2023_24_1,pune_dist_N9_Data_2023_24_2,pune_dist_N9_Data_2023_24)
pune_n9_23_24 %>%  count(TALNAME)
sampled_data <- pune_n9_23_24 %>%
group_by(TALNAME) %>%
distinct(GPLGDCODE, .keep_all = TRUE) %>%  # Ensure GPLGDCODE is unique within each TALNAME
sample_n(size = 12, replace = FALSE) %>%    # Sample 12 unique GPLGDCODE per TALNAME
ungroup()
sampled_gplgdcode <- pune_n9_23_24 %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 12, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
sampled_gplgdcode <- pune_n9_23_24 %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 10, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
pune_n9_23_24 %>%  count(TALNAME, GPLGDCODE)
x <- pune_n9_23_24 %>%  count(TALNAME, GPLGDCODE)
View(x)
sampled_gplgdcode <- pune_n9_23_24 %>%
filter(TALNAME!="Daund"&TALNAME!="Ambegaon") %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 12, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
sampled_gplgdcode <- pune_n9_23_24 %>%
filter(TALNAME!="Daund"&TALNAME!="Ambegaon"&TALNAME!="Haveli") %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 12, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
sampled_gplgdcode <- pune_n9_23_24 %>%
filter(TALNAME!="Daund"&TALNAME!="Ambegaon"&TALNAME!="Haveli"&TALNAME!="Indapur") %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 12, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
sampled_gplgdcode <- pune_n9_23_24 %>%
filter(TALNAME!="Daund"&TALNAME!="Ambegaon"&TALNAME!="Haveli"&TALNAME!="Indapur"&TALNAME!="Mulshi") %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 12, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
View(sampled_gplgdcode)
# Filter the original data to keep only the sampled GPLGDCODE observations
sampled_data <- pune_n9_23_24 %>%
semi_join(sampled_gplgdcode, by = c("TALNAME", "GPLGDCODE"))
View(sampled_data)
sampled_gplgdcode <- pune_n9_23_24 %>%
filter(TALNAME!="Mulshi") %>%
select(TALNAME, GPLGDCODE) %>%
distinct() %>%  # Get unique TALNAME and GPLGDCODE combinations
group_by(TALNAME) %>%
sample_n(size = 8, replace = FALSE) %>%  # Randomly sample 12 GPLGDCODE per TALNAME
ungroup()
# Filter the original data to keep only the sampled GPLGDCODE observations
sampled_data <- pune_n9_23_24 %>%
semi_join(sampled_gplgdcode, by = c("TALNAME", "GPLGDCODE"))
View(sampled_data)
write_xlsx(sampled_data,paste0("/Users/akankshavardani/Dropbox/Arsin_gender_names/n9_23_24_pune.xlsx"))
rm(pune_dist_N9_Data_2023_24,pune_dist_N9_Data_2023_24_2,pune_dist_N9_Data_2023_24_1,pune_n9_23_24,sampled_data,sampled_gplgdcode)
